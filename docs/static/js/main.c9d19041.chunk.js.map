{"version":3,"sources":["app/components/Category/index.tsx","app/components/gifItem/index.tsx","app/helpers/getGif.tsx","app/hooks/useFetchGif.tsx","app/components/loader/index.tsx","app/components/gifsList/index.tsx","app/App.tsx","index.tsx"],"names":["AddCategory","category","useState","value","setValue","onSubmit","e","preventDefault","cat","className","type","placeholder","onChange","target","GifItem","id","title","url","image","src","alt","a","URL","params","api_key","q","limit","search","URLSearchParams","toString","fetch","method","peticion","json","data","info","map","elem","images","downsized_medium","useFetchGif","loading","state","setState","useEffect","getGif","then","setTimeout","catch","console","log","color","height","width","timeout","GifList","item","key","App","setCategory","root","document","getElementById","ReactDOM","render"],"mappings":"6QAsCeA,G,MAlCK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAAkC,EAE1BC,mBAAS,IAFiB,mBAE7CC,EAF6C,KAEtCC,EAFsC,KAmBpD,OACI,kBAAC,WAAD,KACI,0BAAMC,SAXC,SAACC,GACZA,EAAEC,iBAECJ,IACCF,GAAU,SAACO,GAAD,OAAcL,GAAd,mBAAuBK,OACjCJ,EAAS,OAOL,2BACIK,UAAU,mBACVC,KAAK,OACLP,MAAOA,EACPQ,YAAY,SACZC,SAvBK,SAACN,GAClBA,EAAEC,iBACF,IAAMM,EAASP,EAAEO,OACjBT,EAAUS,EAAOV,cCMVW,G,MARC,SAAC,GAAD,EAAEC,GAAF,IAAMC,EAAN,EAAMA,MAAaC,EAAnB,EAAaC,MAAb,OACZ,yBAAKT,UAAU,OACX,yBAAKU,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,M,+BCXZ,yCAAe,WAAOf,GAAP,yBAAAoB,EAAA,6DACLJ,EAAM,IAAIK,IAAI,wCAGdC,EAAS,CACXC,QAAU,mCACVC,EAAIxB,EACJyB,MAAQ,MAGZT,EAAIU,OAAS,IAAIC,gBAAgBL,GAAQM,WAV9B,SAYYC,MAAMb,EAAIY,WAAY,CAAEE,OAAQ,QAZ5C,cAYLC,EAZK,gBAaYA,EAASC,OAbrB,uBAaHC,EAbG,EAaHA,KAGFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHtB,GAAIsB,EAAKtB,GACTC,MAAOqB,EAAKrB,MACZE,MAAOmB,EAAKC,OAAOC,iBAAiBtB,QApBjC,kBAwBJkB,GAxBI,4CAAf,sDCyBeK,EAvBK,SAACvC,GAAqB,IAAD,EAEXC,mBAAS,CAC/BgC,KAAM,GACNO,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAoBrC,OAbAC,qBAAU,WACNC,EAAO5C,GACF6C,MAAM,SAAAZ,GACHa,YAAW,WACPJ,EAAS,CACLT,OACAO,SAAS,MAEf,QAELO,MAAMC,QAAQC,OACrB,CAACjD,IAEIyC,G,gBCnBI,oBACX,kBAAC,IAAD,CACKhC,KAAK,eACLyC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,KCsBHC,EA1BC,SAAC,GAAmC,IAAlCtD,EAAiC,EAAjCA,SAAiC,EAErBuC,EAAYvC,GAA9BiC,EAFuC,EAEvCA,KAAMO,EAFiC,EAEjCA,QAEd,OACI,kBAAC,WAAD,KAEQA,EAAU,yBAAKhC,UAAU,SAAQ,kBAAC,EAAD,OACjC,6BAASA,UAAU,qCACf,uBAAGA,UAAU,iBAAiBR,GAC9B,yBAAKQ,UAAU,QACTyB,EAAKE,KAAI,SAACoB,GAAD,OACP,kBAAC,EAAD,eACIC,IAAKD,EAAKzC,IACNyC,WCmBrBE,G,MAlCH,WAAO,IAAD,EAEkBxD,mBAAS,CAAC,mBAF5B,mBAEPD,EAFO,KAEG0D,EAFH,KAId,OAGI,6BACI,6BAASlD,UAAU,qCACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,SAAd,qBACA,wBAAIA,UAAU,YAAd,mCACA,gCAKZ,yBAAKA,UAAU,0BACX,kBAAC,EAAD,CAAUR,SAAU0D,IACpB,4BACM1D,EAASmC,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,CACIoB,IAAKpB,EACLpC,SAAUoC,YCvBhCuB,G,YAAOC,SAASC,eAAe,SAErCC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.c9d19041.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport './index.scss'\n\n\nconst AddCategory = ({category}:{category:Function}) => {\n\n    const [value, setValue] = useState('')\n\n    const handleSubmit = (e: Event) => {\n        e.preventDefault();\n        const target = e.target as HTMLInputElement;\n        setValue( target.value )\n    }\n\n    const submit = (e:Event) => {\n        e.preventDefault();\n\n        if(value){\n            category( (cat:any) => [value,...cat])\n            setValue('')\n        }\n    }\n\n    return (\n        <Fragment>\n            <form onSubmit={submit as any}>\n                <input \n                    className='input is-primary' \n                    type=\"text\" \n                    value={value} \n                    placeholder=\"Search\"\n                    onChange={handleSubmit as any}\n                />\n            </form>\n        </Fragment>\n    )\n}\n\nexport default AddCategory;","import React from 'react'\nimport './index.scss'\n\ninterface I_item {\n    id: string;\n    title: string;\n    image: string;\n}\n\nconst GifItem = ({id, title, image:url}: I_item) => (\n    <div className='img'>\n        <img src={url} alt={title}/>\n        <p>{title}</p>\n    </div>\n)\n\n\nexport default GifItem","\nexport default async (category:string) => {\n    const url = new URL('https://api.giphy.com/v1/gifs/search')\n\n\n    const params = {\n        api_key : 'uY1IeNEAK1moL7wbeqxgD1MAO6GvW369',\n        q : category,\n        limit : '10'\n    }\n\n    url.search = new URLSearchParams(params).toString()\n\n    const peticion = await fetch(url.toString(), { method: 'GET'})\n    const { data } = await peticion.json();\n\n\n    const info = data.map((elem:any) => {\n        return { \n            id: elem.id,\n            title: elem.title,\n            image: elem.images.downsized_medium.url\n        }\n    })\n\n    return info\n}","import { useState ,useEffect} from 'react'\nimport getGif from '../helpers/getGif'\n\nconst useFetchGif = (category:string) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGif(category)\n            .then( data => {\n                setTimeout(() => {\n                    setState({\n                        data,\n                        loading: false\n                    })\n                },3000)\n            })\n            .catch(console.log)\n    },[category])\n\n    return state\n}\n\nexport default useFetchGif","import React from 'react'\nimport Loader from 'react-loader-spinner'\n\n\nexport default () => (\n    <Loader\n         type=\"MutatingDots\"\n         color=\"#4ab56c\"\n         height={100}\n         width={100}\n         timeout={0} //3 secs\n      />\n)","import React, {Fragment} from 'react';\nimport GifItem from '../gifItem'\nimport './index.scss'\nimport useFetchGif from '../../hooks/useFetchGif';\nimport Loader from '../loader'\n\nconst GifList = ({category}: {category:string}) => {\n\n    const { data, loading } = useFetchGif(category)\n\n    return (\n        <Fragment >\n            {\n                loading ? <div className=\"spin \"><Loader/></div> :\n                <section className=\"animate__animated animate__fadeIn\">\n                    <p className='titleCategory'>{category}</p>\n                    <div className=\"test\">\n                        { data.map((item:any) => \n                            <GifItem \n                                key={item.id}\n                                {...item}\n                            />\n                        )}\n                    </div>\n                </section>\n            }\n        </Fragment>\n    )\n\n}\n\n\nexport default GifList","import React,  { useState } from 'react'\nimport Category from './components/Category'\nimport Giflist from './components/gifsList'\nimport './App.scss'\n\nconst App = () => {\n\n    const [category, setCategory] = useState(['rick and morty'])\n\n    return (\n\n\n        <div>\n            <section className=\"hero is-medium is-primary is-bold\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title\">Aplicaci√≥n GIF</h1>\n                        <h2 className=\"subtitle\">aplicacion de prueba para react</h2>\n                        <hr/>\n                    </div>\n                </div>\n            </section>\n\n            <div className=\"hero-body containerDiv\">\n                <Category category={setCategory}/>\n                <ul>\n                    { category.map((elem) => (\n                        <Giflist \n                            key={elem}\n                            category={elem}\n                        />\n                    ))}\n                </ul>\n            </div>\n\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport 'bulma';\nimport 'animate.css'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(<App />, root)\n"],"sourceRoot":""}